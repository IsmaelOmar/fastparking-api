# server properties
server.port=8181
server.servlet.context-path=/fastparking
server.connection-timeout=10s
server.max-http-header-size=8KB
server.tomcat.accept-count=100
server.tomcat.max-connections=10000
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10
server.tomcat.max-swallow-size=2MB
server.tomcat.max-http-post-size=2MB


camel.springboot.name = fastparking-users
camel.component.servlet.mapping.contextPath=/*
camel.springboot.jmx-enabled = false
camel.springboot.main-run-controller=true

spring.main.allow-bean-definition-overriding=true

spring.jpa.open-in-view=false

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# JDBC URL of the database.
spring.datasource.url=jdbc:postgresql://192.168.56.3:5432/parking
spring.datasource.username=sys
spring.datasource.password=Walk23Mast
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.initialize=false

# dbcp2 settings
# spring.datasource.dbcp2.*

spring.datasource.dbcp2.initial-size=10
spring.datasource.dbcp2.max-total=20
spring.datasource.dbcp2.pool-prepared-statements=true

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.default_schema=public
# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" when using an embedded database and no schema manager was detected. Otherwise, defaults to "none".
spring.jpa.properties.hibernate.hbm2ddl.auto=none
# Logging of SQL statements.
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=false
# Show hibernate stats
spring.jpa.properties.hibernate.generate_statistics=true
# Hibernate additional native properties to set on the JPA provider.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.current_session_context_class=thread
# Fix Postgres JPA Error (Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented).
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Hibernate cache
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
spring.jpa.properties.hibernate.javax.cache.provider=org.ehcache.jsr107.EhcacheCachingProvider
spring.jpa.properties.hibernate.javax.cache.missing_cache_strategy=create
spring.jpa.properties.hibernate.javax.cache.uri=ecache.xml
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.query.plan_cache_max_size=2048
spring.jpa.properties.hibernate.connection.provider_class=org.hibernate.connection.C3P0ConnectionProvider
spring.jpa.properties.hibernate.connection.driver_class=org.postgresql.Driver
spring.jpa.properties.hibernate.c3p0.min_size=2
spring.jpa.properties.hibernate.c3p0.max_size=30

# configure logging levels
logging.level.root=INFO
logging.level.uk.gov.ho.sisii= ${logging.level.root}
logging.level.org.springframework = ${logging.level.root}
logging.level.org.hibernate= ${logging.level.root}
logging.level.org.apache.cxf= ${logging.level.root}
logging.level.org.apache.camel.spring.boot = ${logging.level.root}
logging.level.org.apache.camel.impl = ${logging.level.root}
logging.level.com.openpojo.random = ${logging.level.root}
logging.pattern.console={"timestamp":"%d{yyyy-MM-dd HH:mm:ss:SSS}","thread":"[%thread]","trackingId":"[%X{trackingId}]","correlationId":"[%X{correlationId}]","logMessage":"%-5level %logger{36} - %replace(%msg){'[\n\r]',''}"}%n

org.apache.cxf.Logger=org.apache.cxf.common.logging.Slf4jLogger

logback.access.enabled=true